"""Read Otis custom merged netcdf file format."""
from oceantide.core.otis import from_otis
from oceantide.core.utils import read_netcdf_or_zarr
from oceantide.tide import Tide


def read_otis_merged(filename, file_format="netcdf"):
    """Read Otis custom merged netcdf file format.

    Args:
        filename (str): Name of Otis custom merged netcdf file to read.
        file_format (str): format of file to open, one of `netcdf` or `zarr`.

    Otis custom merged format was defined in an attempt to have one single file with
        all required data conforming to CF-standards. The dataset should look like:

    <xarray.Dataset>
    Dimensions:  (con: 3, lat_u: 19, lat_v: 19, lat_z: 19, lon_u: 34, lon_v: 34, lon_z: 34)
    Coordinates:
    * con      (con) |S4 b'm2  ' b's2  ' b'n2  '
    * lat_u    (lat_u) float64 47.88 48.63 49.38 50.13 ... 59.17 59.92 60.67 61.42
    * lat_v    (lat_v) float64 47.88 48.63 49.38 50.13 ... 59.17 59.92 60.67 61.42
    * lat_z    (lat_z) float64 47.88 48.63 49.38 50.13 ... 59.17 59.92 60.67 61.42
    * lon_u    (lon_u) float64 -11.62 -10.87 -10.12 -9.375 ... 11.63 12.38 13.13
    * lon_v    (lon_v) float64 -11.62 -10.87 -10.12 -9.375 ... 11.63 12.38 13.13
    * lon_z    (lon_z) float64 -11.62 -10.87 -10.12 -9.375 ... 11.63 12.38 13.13
    Data variables:
        UIm      (con, lat_u, lon_u) float32 ...
        URe      (con, lat_u, lon_u) float32 ...
        VIm      (con, lat_v, lon_v) float32 ...
        VRe      (con, lat_v, lon_v) float32 ...
        hIm      (con, lat_z, lon_z) float32 ...
        hRe      (con, lat_z, lon_z) float32 ...
        hu       (lat_u, lon_u) float32 ...
        hv       (lat_v, lon_v) float32 ...
        hz       (lat_z, lon_z) float32 ...
        mu       (lat_u, lon_u) int32 ...
        mv       (lat_v, lon_v) int32 ...
        mz       (lat_z, lon_z) int32 ...
        uIm      (con, lat_u, lon_u) float32 ...
        uRe      (con, lat_u, lon_u) float32 ...
        vIm      (con, lat_v, lon_v) float32 ...
        vRe      (con, lat_v, lon_v) float32 ...

    """
    dset = read_netcdf_or_zarr(filename, file_format=file_format)
    return from_otis(dset)
